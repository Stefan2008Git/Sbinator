# A main builder and compiler of our game for GitHub actions
name: Build

on:
  push:
      branches: [main]
  

  workflow_dispatch:

jobs:
    Linux:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4.1.7

        - uses: krdlab/setup-haxe@master
          with:
            haxe-version: 4.3.6

        - name: Restore existing build cache for faster compilation
          uses: actions/cache@v3
          with:
            # not caching the bin folder to prevent asset duplication and stuff like that
            key: cache-build-linux
            path: |
             .haxelib/
             export/release/linux/haxe/
             export/release/linux/obj/
           restore-keys: |
             cache-build-linux
          
        - name: Install required Haxelib libs
          run: |
            sudo apt-get install libvlc-dev
            sudo apt-get install libvlccore-dev
            haxelib setup ~/haxelib
            haxelib install flixel
            haxelib install flixel-addons
            haxelib install flixel-ui
            haxelib install lime
            haxelib install openfl
            haxelib install hxcpp
            haxelib install hxdiscord_rpc 1.2.4
        
        - name: Create Version Tag
          run: echo "${{github.run_id}} > VERSION"
        
        - name: Configure main target
          run: |
            haxelib set hxdiscord_rpc 1.2.4

        - name: Compile and build
          run: haxelib run lime build linux

        - name: Publish main artifacts
          uses: actions/upload-artifact@v4.3.4
          with:
            name: Sbinator-linux_build
            path: 'export/release/linux/bin'

        - name: Clearing existing cache
          uses: actions/github-script@v6
          with:
           script: |
             const caches = await github.rest.actions.getActionsCacheList({
               owner: context.repo.owner,
               repo: context.repo.repo,
             })
             for (const cache of caches.data.actions_caches) {
               if (cache.key == "cache-build-linux") {
                 console.log('Clearing ' + cache.key + '...')
                 await github.rest.actions.deleteActionsCacheById({
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   cache_id: cache.id,
                 })
                 console.log("Cache cleared.")
               }
             }

        - name: Uploading new cache
          uses: actions/cache@v3
          with:
          # caching again since for some reason it doesnt work with the first post cache shit
            key: cache-build-linux
            path: |
              .haxelib/
              export/release/linux/haxe/
              export/release/linux/obj/
          restore-keys: |
            cache-build-linux
    Windows:
      runs-on: windows-latest

      steps:
        - uses: actions/checkout@v4.1.7

        - uses: krdlab/setup-haxe@master
          with:
            haxe-version: 4.3.6

        - name: Restore existing build cache for faster compilation
          uses: actions/cache@v3
          with:
            # not caching the bin folder to prevent asset duplication and stuff like that
            key: cache-build-windows
            path: |
              .haxelib/
              export/release/windows/haxe/
              export/release/windows/obj/
            restore-keys: |
              cache-build-windows
          
        - name: Install required Haxelib libs
          run: |
            haxelib setup ~/haxelib
            haxelib install flixel
            haxelib install flixel-addons
            haxelib install flixel-ui
            haxelib install lime
            haxelib install openfl
            haxelib install hxcpp
            haxelib install hxdiscord_rpc 1.2.4
          
        - name: Create version tag
          run: echo "${{github.run_id}}" > VERSION
          
        - name: Configure main target
          run: |
            haxelib set hxdiscord_rpc 1.2.4
          
        - name: Compile and build
          run: haxelib run lime build windows
          
        - name: Publish main artifact
          uses: actions/upload-artifact@v4.3.4
          with:
            name: Sbinator-windows_build
            path: export/release/windows/bin

         - name: Clearing already existing cache
           uses: actions/github-script@v6
           with:
           script: |
             const caches = await github.rest.actions.getActionsCacheList({
               owner: context.repo.owner,
               repo: context.repo.repo,
             })
             for (const cache of caches.data.actions_caches) {
               if (cache.key == "cache-build-windows") {
                 console.log('Clearing ' + cache.key + '...')
                 await github.rest.actions.deleteActionsCacheById({
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache@v3
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: cache-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            cache-build-windows
